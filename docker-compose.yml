version: "3.8"
services:

  mongo:
    image: mongo
    hostname: mongodb
    container_name: mongo
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ${DOCKER_CONFIGS}/mongo/mongod.conf:/etc/mongod.conf
      - ${DOCKER_CONFIGS}/mongo/initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_USERNAME=${MONGO_INITDB_USERNAME}
      - MONGO_INITDB_PASSWORD=${MONGO_INITDB_PASSWORD}
    command: ["-f", "/etc/mongod.conf"]

  mongoclient:
    image: mongoclient/mongoclient:4.0.0
    container_name: mongoclient
    ports:
      - ${MONGOCLIENT_PORT}:3000
    depends_on:
      - mongo
#    logging:
#      driver: "none"

  mongoexpress:
    image: mongo-express
    container_name: mongo-express
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongo

  redis:
    image: redis:latest
    container_name: api-v2-redis
    expose:
      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:6379
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=development
    volumes:
      - ./redis_data:/data

  redis-commander:
    container_name: api-v2-redis-commander
    hostname: api-v2-redis-commander
    image: rediscommander/redis-commander:latest
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - HTTP_USER=${REDIS_COMMANDER_HTTP_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_HTTP_PASSWORD}
    depends_on:
      - redis
